<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AmjiEmoticones', 'doctrine');

/**
 * BaseAmjiEmoticones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idamji_emoticones
 * @property string $racourci
 * @property string $image
 * 
 * @method integer        getIdamjiEmoticones()  Returns the current record's "idamji_emoticones" value
 * @method string         getRacourci()          Returns the current record's "racourci" value
 * @method string         getImage()             Returns the current record's "image" value
 * @method AmjiEmoticones setIdamjiEmoticones()  Sets the current record's "idamji_emoticones" value
 * @method AmjiEmoticones setRacourci()          Sets the current record's "racourci" value
 * @method AmjiEmoticones setImage()             Sets the current record's "image" value
 * 
 * @package    amji
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAmjiEmoticones extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('amji_emoticones');
        $this->hasColumn('idamji_emoticones', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('racourci', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('image', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '200',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}