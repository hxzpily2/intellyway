<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Emoticones', 'doctrine');

/**
 * BaseEmoticones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idemoticones
 * @property string $racourci
 * @property string $image
 * 
 * @method integer    getIdemoticones() Returns the current record's "idemoticones" value
 * @method string     getRacourci()     Returns the current record's "racourci" value
 * @method string     getImage()        Returns the current record's "image" value
 * @method Emoticones setIdemoticones() Sets the current record's "idemoticones" value
 * @method Emoticones setRacourci()     Sets the current record's "racourci" value
 * @method Emoticones setImage()        Sets the current record's "image" value
 * 
 * @package    amji
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseEmoticones extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('emoticones');
        $this->hasColumn('idemoticones', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('racourci', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
        $this->hasColumn('image', 'string', 45, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '45',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}