<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AmjiResponseGroup', 'doctrine');

/**
 * BaseAmjiResponseGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idamji_response
 * @property string $content
 * @property integer $iduser
 * @property integer $idrequest
 * @property integer $idresponse
 * @property AmjiUser $AmjiUser
 * @property AmjiRequestGroup $AmjiRequestGroup
 * @property Doctrine_Collection $AmjiResponseGroup
 * @property Doctrine_Collection $AmjiResponseGroupAttachment
 * @property Doctrine_Collection $AmjiCastResponseGroup
 * 
 * @method integer             getIdamjiResponse()              Returns the current record's "idamji_response" value
 * @method string              getContent()                     Returns the current record's "content" value
 * @method integer             getIduser()                      Returns the current record's "iduser" value
 * @method integer             getIdrequest()                   Returns the current record's "idrequest" value
 * @method integer             getIdresponse()                  Returns the current record's "idresponse" value
 * @method AmjiUser            getAmjiUser()                    Returns the current record's "AmjiUser" value
 * @method AmjiRequestGroup    getAmjiRequestGroup()            Returns the current record's "AmjiRequestGroup" value
 * @method Doctrine_Collection getAmjiResponseGroup()           Returns the current record's "AmjiResponseGroup" collection
 * @method Doctrine_Collection getAmjiResponseGroupAttachment() Returns the current record's "AmjiResponseGroupAttachment" collection
 * @method Doctrine_Collection getAmjiCastResponseGroup()       Returns the current record's "AmjiCastResponseGroup" collection
 * @method AmjiResponseGroup   setIdamjiResponse()              Sets the current record's "idamji_response" value
 * @method AmjiResponseGroup   setContent()                     Sets the current record's "content" value
 * @method AmjiResponseGroup   setIduser()                      Sets the current record's "iduser" value
 * @method AmjiResponseGroup   setIdrequest()                   Sets the current record's "idrequest" value
 * @method AmjiResponseGroup   setIdresponse()                  Sets the current record's "idresponse" value
 * @method AmjiResponseGroup   setAmjiUser()                    Sets the current record's "AmjiUser" value
 * @method AmjiResponseGroup   setAmjiRequestGroup()            Sets the current record's "AmjiRequestGroup" value
 * @method AmjiResponseGroup   setAmjiResponseGroup()           Sets the current record's "AmjiResponseGroup" collection
 * @method AmjiResponseGroup   setAmjiResponseGroupAttachment() Sets the current record's "AmjiResponseGroupAttachment" collection
 * @method AmjiResponseGroup   setAmjiCastResponseGroup()       Sets the current record's "AmjiCastResponseGroup" collection
 * 
 * @package    amji
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAmjiResponseGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('amji_response_group');
        $this->hasColumn('idamji_response', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('iduser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('idrequest', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('idresponse', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AmjiUser', array(
             'local' => 'iduser',
             'foreign' => 'idamji_user'));

        $this->hasOne('AmjiRequestGroup', array(
             'local' => 'idrequest',
             'foreign' => 'idamji_request'));

        $this->hasMany('AmjiResponseGroup', array(
             'local' => 'idamji_response',
             'foreign' => 'idresponse'));

        $this->hasMany('AmjiResponseGroupAttachment', array(
             'local' => 'idamji_response',
             'foreign' => 'idamji_response'));

        $this->hasMany('AmjiCastResponseGroup', array(
             'local' => 'idamji_response',
             'foreign' => 'idamji_response'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}