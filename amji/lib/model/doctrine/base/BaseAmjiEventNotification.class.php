<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AmjiEventNotification', 'doctrine');

/**
 * BaseAmjiEventNotification
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idamji_notif
 * @property integer $owner
 * @property integer $periode
 * @property string $type
 * @property integer $notifmail
 * @property integer $notifsms
 * @property Doctrine_Collection $AmjiUser
 * @property Doctrine_Collection $AmjiEvent
 * 
 * @method integer               getIdamjiNotif()  Returns the current record's "idamji_notif" value
 * @method integer               getOwner()        Returns the current record's "owner" value
 * @method integer               getPeriode()      Returns the current record's "periode" value
 * @method string                getType()         Returns the current record's "type" value
 * @method integer               getNotifmail()    Returns the current record's "notifmail" value
 * @method integer               getNotifsms()     Returns the current record's "notifsms" value
 * @method Doctrine_Collection   getAmjiUser()     Returns the current record's "AmjiUser" collection
 * @method Doctrine_Collection   getAmjiEvent()    Returns the current record's "AmjiEvent" collection
 * @method AmjiEventNotification setIdamjiNotif()  Sets the current record's "idamji_notif" value
 * @method AmjiEventNotification setOwner()        Sets the current record's "owner" value
 * @method AmjiEventNotification setPeriode()      Sets the current record's "periode" value
 * @method AmjiEventNotification setType()         Sets the current record's "type" value
 * @method AmjiEventNotification setNotifmail()    Sets the current record's "notifmail" value
 * @method AmjiEventNotification setNotifsms()     Sets the current record's "notifsms" value
 * @method AmjiEventNotification setAmjiUser()     Sets the current record's "AmjiUser" collection
 * @method AmjiEventNotification setAmjiEvent()    Sets the current record's "AmjiEvent" collection
 * 
 * @package    amji
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAmjiEventNotification extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('amji_event_notification');
        $this->hasColumn('idamji_notif', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('owner', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('periode', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('type', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('notifmail', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('notifsms', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AmjiUser', array(
             'local' => 'owner',
             'foreign' => 'idamji_user'));

        $this->hasMany('AmjiEvent', array(
             'local' => 'idamji_notif',
             'foreign' => 'idnotif'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}