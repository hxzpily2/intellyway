<?php

/**
 * BaseJobeetVille
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $pays_id
 * @property Doctrine_Collection $sfGuardUser
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getLibelle()     Returns the current record's "libelle" value
 * @method integer             getPaysId()      Returns the current record's "pays_id" value
 * @method Doctrine_Collection getSfGuardUser() Returns the current record's "sfGuardUser" collection
 * @method JobeetVille         setId()          Sets the current record's "id" value
 * @method JobeetVille         setLibelle()     Sets the current record's "libelle" value
 * @method JobeetVille         setPaysId()      Sets the current record's "pays_id" value
 * @method JobeetVille         setSfGuardUser() Sets the current record's "sfGuardUser" collection
 * 
 * @package    amji
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseJobeetVille extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('jobeet_ville');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             'length' => '8',
             ));
        $this->hasColumn('libelle', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '255',
             ));
        $this->hasColumn('pays_id', 'integer', 8, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => '8',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('sfGuardUser', array(
             'local' => 'id',
             'foreign' => 'test'));
    }
}