CREATE TABLE T_CPT
(
  CPT_NUM    VARCHAR2(24 BYTE),
  CPT_DESC VARCHAR2(24 BYTE),
  CPT_SOLDE NUMBER(21,3),
  CPT_DATE_SOLDE DATE,
  CPT_HOLDER_PRENOM VARCHAR2(24 BYTE),  
  CPT_HOLDER_NOM VARCHAR2(24 BYTE)  
);

CREATE UNIQUE INDEX PK_T_CPT ON T_CPT (CPT_NUM);
ALTER TABLE T_CPT ADD ( CONSTRAINT PK_CPT PRIMARY KEY (CPT_NUM) USING INDEX );

CREATE TABLE T_TRX
(
  TRX_NUM    VARCHAR2(32 BYTE),
  TRX_CPT_NUM  VARCHAR2(24 BYTE),
  TRX_DESC VARCHAR2(255 BYTE),
  TRX_DATE_VALEUR DATE,
  TRX_MNT_DEBIT  NUMBER(21,3),  
  TRX_MNT_CREDIT NUMBER(21,3)  
);

CREATE UNIQUE INDEX PK_T_TRX ON T_TRX (TRX_NUM);

ALTER TABLE T_TRX ADD ( CONSTRAINT PK_TRX PRIMARY KEY (TRX_NUM) USING INDEX );
ALTER TABLE T_TRX ADD ( CONSTRAINT PK_TRX_FK FOREIGN KEY (TRX_CPT_NUM) REFERENCES T_CPT (CPT_NUM) );

CREATE TABLE ACCOUNT_USER
(
  ID_USER    NUMBER,
  LOGIN_USER   VARCHAR2(50 BYTE),
  EMAIL_USER  VARCHAR2(50 BYTE),
  DATE_CREATION DATE,
  LAST_LOGIN DATE,
  CPT_NUM    VARCHAR2(24 BYTE),
  PASSWORD_USER  VARCHAR2(100 BYTE)  
);


CREATE UNIQUE INDEX PK_USER ON ACCOUNT_USER (ID_USER);

CREATE SEQUENCE VAD.SEQ_USER
  START WITH 1
  MAXVALUE 9999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER TRG_USER
BEFORE INSERT
ON ACCOUNT_USER
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpVar NUMBER;

BEGIN
   tmpVar := 0;

   SELECT SEQ_USER.NEXTVAL INTO tmpVar FROM dual;
   :NEW.ID_USER := tmpVar;

END TRG_USER;
/




ALTER TABLE ACCOUNT_USER ADD ( CONSTRAINT PK_USER PRIMARY KEY (ID_USER) USING INDEX );
ALTER TABLE ACCOUNT_USER ADD ( CONSTRAINT PK_USER_CPT_FK FOREIGN KEY (CPT_NUM) REFERENCES T_CPT (CPT_NUM) );

INSERT INTO ACCOUNT_USER VALUES (NULL,'test', '8cb2237d0679ca88db6464eac60da96345513964');

CREATE TABLE ACCOUNT_RIGHTS
(
  ID    NUMBER,
  LABEL   VARCHAR2(50 BYTE),
  I18NKEY  VARCHAR2(100 BYTE),
  ID_USER  NUMBER  
);	

CREATE UNIQUE INDEX PK_RIGHTS ON ACCOUNT_RIGHTS (ID);
CREATE SEQUENCE VAD.SEQ_RIGHTS
  START WITH 1
  MAXVALUE 9999999999
  MINVALUE 0
  NOCYCLE
  NOCACHE
  NOORDER;

CREATE OR REPLACE TRIGGER TRG_RIGHTS
BEFORE INSERT
ON ACCOUNT_RIGHTS
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
tmpVar NUMBER;

BEGIN
   tmpVar := 0;

   SELECT SEQ_RIGHTS.NEXTVAL INTO tmpVar FROM dual;
   :NEW.ID := tmpVar;

END TRG_RIGHTS;
/  

ALTER TABLE ACCOUNT_RIGHTS ADD ( CONSTRAINT PK_RIGHTS PRIMARY KEY (ID) USING INDEX );
ALTER TABLE ACCOUNT_RIGHTS ADD ( CONSTRAINT PK_RIGHTS_FK FOREIGN KEY (ID_USER) REFERENCES ACCOUNT_USER (ID_USER) );

INSERT INTO ACCOUNT_RIGHTS (label, id_user) VALUES ('USER', 1);
INSERT INTO ACCOUNT_RIGHTS (label, id_user) VALUES ('ADMIN', 1);
