<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CarCon', 'doctrine');

/**
 * BaseCarCon
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idmarque
 * @property integer $idville
 * @property string $adresse
 * @property string $tel1
 * @property string $tel2
 * @property string $fax
 * @property integer $active
 * @property CarVille $CarVille
 * @property CarMarque $CarMarque
 * 
 * @method integer   getIdmarque()  Returns the current record's "idmarque" value
 * @method integer   getIdville()   Returns the current record's "idville" value
 * @method string    getAdresse()   Returns the current record's "adresse" value
 * @method string    getTel1()      Returns the current record's "tel1" value
 * @method string    getTel2()      Returns the current record's "tel2" value
 * @method string    getFax()       Returns the current record's "fax" value
 * @method integer   getActive()    Returns the current record's "active" value
 * @method CarVille  getCarVille()  Returns the current record's "CarVille" value
 * @method CarMarque getCarMarque() Returns the current record's "CarMarque" value
 * @method CarCon    setIdmarque()  Sets the current record's "idmarque" value
 * @method CarCon    setIdville()   Sets the current record's "idville" value
 * @method CarCon    setAdresse()   Sets the current record's "adresse" value
 * @method CarCon    setTel1()      Sets the current record's "tel1" value
 * @method CarCon    setTel2()      Sets the current record's "tel2" value
 * @method CarCon    setFax()       Sets the current record's "fax" value
 * @method CarCon    setActive()    Sets the current record's "active" value
 * @method CarCon    setCarVille()  Sets the current record's "CarVille" value
 * @method CarCon    setCarMarque() Sets the current record's "CarMarque" value
 * 
 * @package    car
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCarCon extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('car_con');
        $this->hasColumn('idmarque', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('idville', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('adresse', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('tel1', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('tel2', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('fax', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CarVille', array(
             'local' => 'idville',
             'foreign' => 'idville'));

        $this->hasOne('CarMarque', array(
             'local' => 'idmarque',
             'foreign' => 'idmarque',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}