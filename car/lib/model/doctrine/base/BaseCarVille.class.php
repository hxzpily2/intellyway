<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CarVille', 'doctrine');

/**
 * BaseCarVille
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idville
 * @property string $title
 * @property integer $idpays
 * @property integer $active
 * @property CarPays $CarPays
 * @property Doctrine_Collection $CarCon
 * @property Doctrine_Collection $CarAdresseGar
 * @property Doctrine_Collection $CarAuto
 * 
 * @method integer             getIdville()       Returns the current record's "idville" value
 * @method string              getTitle()         Returns the current record's "title" value
 * @method integer             getIdpays()        Returns the current record's "idpays" value
 * @method integer             getActive()        Returns the current record's "active" value
 * @method CarPays             getCarPays()       Returns the current record's "CarPays" value
 * @method Doctrine_Collection getCarCon()        Returns the current record's "CarCon" collection
 * @method Doctrine_Collection getCarAdresseGar() Returns the current record's "CarAdresseGar" collection
 * @method Doctrine_Collection getCarAuto()       Returns the current record's "CarAuto" collection
 * @method CarVille            setIdville()       Sets the current record's "idville" value
 * @method CarVille            setTitle()         Sets the current record's "title" value
 * @method CarVille            setIdpays()        Sets the current record's "idpays" value
 * @method CarVille            setActive()        Sets the current record's "active" value
 * @method CarVille            setCarPays()       Sets the current record's "CarPays" value
 * @method CarVille            setCarCon()        Sets the current record's "CarCon" collection
 * @method CarVille            setCarAdresseGar() Sets the current record's "CarAdresseGar" collection
 * @method CarVille            setCarAuto()       Sets the current record's "CarAuto" collection
 * 
 * @package    car
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCarVille extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('car_ville');
        $this->hasColumn('idville', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '10',
             ));
        $this->hasColumn('title', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('idpays', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CarPays', array(
             'local' => 'idpays',
             'foreign' => 'idpays',
             'onDelete' => 'CASCADE'));

        $this->hasMany('CarCon', array(
             'local' => 'idville',
             'foreign' => 'idville'));

        $this->hasMany('CarAdresseGar', array(
             'local' => 'idville',
             'foreign' => 'idville'));

        $this->hasMany('CarAuto', array(
             'local' => 'idville',
             'foreign' => 'idville'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}