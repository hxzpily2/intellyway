<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CarProposition', 'doctrine');

/**
 * BaseCarProposition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idproposition
 * @property integer $idencher
 * @property integer $idgroup
 * @property integer $iduser
 * @property integer $prix
 * @property integer $accepted
 * @property integer $active
 * @property CarEncher $CarEncher
 * 
 * @method integer        getIdproposition() Returns the current record's "idproposition" value
 * @method integer        getIdencher()      Returns the current record's "idencher" value
 * @method integer        getIdgroup()       Returns the current record's "idgroup" value
 * @method integer        getIduser()        Returns the current record's "iduser" value
 * @method integer        getPrix()          Returns the current record's "prix" value
 * @method integer        getAccepted()      Returns the current record's "accepted" value
 * @method integer        getActive()        Returns the current record's "active" value
 * @method CarEncher      getCarEncher()     Returns the current record's "CarEncher" value
 * @method CarProposition setIdproposition() Sets the current record's "idproposition" value
 * @method CarProposition setIdencher()      Sets the current record's "idencher" value
 * @method CarProposition setIdgroup()       Sets the current record's "idgroup" value
 * @method CarProposition setIduser()        Sets the current record's "iduser" value
 * @method CarProposition setPrix()          Sets the current record's "prix" value
 * @method CarProposition setAccepted()      Sets the current record's "accepted" value
 * @method CarProposition setActive()        Sets the current record's "active" value
 * @method CarProposition setCarEncher()     Sets the current record's "CarEncher" value
 * 
 * @package    car
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseCarProposition extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('car_proposition');
        $this->hasColumn('idproposition', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('idencher', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('idgroup', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('iduser', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('prix', 'integer', 10, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => '10',
             ));
        $this->hasColumn('accepted', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('active', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('CarEncher', array(
             'local' => 'idencher',
             'foreign' => 'idencher',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}