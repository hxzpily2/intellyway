<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AmjiResponse', 'doctrine');

/**
 * BaseAmjiResponse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idamji_response
 * @property string $content
 * @property integer $iduser
 * @property integer $idrequest
 * @property integer $idresponse
 * @property AmjiUser $AmjiUser
 * @property AmjiRequest $AmjiRequest
 * @property Doctrine_Collection $AmjiResponse
 * 
 * @method integer             getIdamjiResponse()  Returns the current record's "idamji_response" value
 * @method string              getContent()         Returns the current record's "content" value
 * @method integer             getIduser()          Returns the current record's "iduser" value
 * @method integer             getIdrequest()       Returns the current record's "idrequest" value
 * @method integer             getIdresponse()      Returns the current record's "idresponse" value
 * @method AmjiUser            getAmjiUser()        Returns the current record's "AmjiUser" value
 * @method AmjiRequest         getAmjiRequest()     Returns the current record's "AmjiRequest" value
 * @method Doctrine_Collection getAmjiResponse()    Returns the current record's "AmjiResponse" collection
 * @method AmjiResponse        setIdamjiResponse()  Sets the current record's "idamji_response" value
 * @method AmjiResponse        setContent()         Sets the current record's "content" value
 * @method AmjiResponse        setIduser()          Sets the current record's "iduser" value
 * @method AmjiResponse        setIdrequest()       Sets the current record's "idrequest" value
 * @method AmjiResponse        setIdresponse()      Sets the current record's "idresponse" value
 * @method AmjiResponse        setAmjiUser()        Sets the current record's "AmjiUser" value
 * @method AmjiResponse        setAmjiRequest()     Sets the current record's "AmjiRequest" value
 * @method AmjiResponse        setAmjiResponse()    Sets the current record's "AmjiResponse" collection
 * 
 * @package    amji
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseAmjiResponse extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('amji_response');
        $this->hasColumn('idamji_response', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('iduser', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('idrequest', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('idresponse', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => '4',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('AmjiUser', array(
             'local' => 'iduser',
             'foreign' => 'idamji_user'));

        $this->hasOne('AmjiRequest', array(
             'local' => 'idrequest',
             'foreign' => 'idamji_request'));

        $this->hasMany('AmjiResponse', array(
             'local' => 'idamji_response',
             'foreign' => 'idresponse'));
    }
}